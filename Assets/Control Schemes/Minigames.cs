//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Control Schemes/Minigames.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Minigames : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Minigames()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Minigames"",
    ""maps"": [
        {
            ""name"": ""Hotdog"",
            ""id"": ""1d6864ef-e160-4c47-a89f-bfef4d547b72"",
            ""actions"": [
                {
                    ""name"": ""Button1"",
                    ""type"": ""Button"",
                    ""id"": ""a24d0903-5f1b-47d7-8827-750e3253c7c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button2"",
                    ""type"": ""Button"",
                    ""id"": ""443236b2-bfcd-4f02-832a-e36e8fa45b4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button3"",
                    ""type"": ""Button"",
                    ""id"": ""57b672dd-f121-460f-9592-d203355eb95c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button4"",
                    ""type"": ""Button"",
                    ""id"": ""008f7b3c-55e0-46bc-9acb-ea055fa87a60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""805e0fb4-8f0b-408a-b2d4-984e1d33daf9"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f5affd2-dbef-425e-accf-d9cc42141795"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6b0127e-c054-4997-9bd3-8b0854f1f254"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d37c83d8-5ccb-4d3e-bcb9-9cda1070bcc9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86c5986e-a007-43d0-8a6e-9da67cf3aa96"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Hotdog
        m_Hotdog = asset.FindActionMap("Hotdog", throwIfNotFound: true);
        m_Hotdog_Button1 = m_Hotdog.FindAction("Button1", throwIfNotFound: true);
        m_Hotdog_Button2 = m_Hotdog.FindAction("Button2", throwIfNotFound: true);
        m_Hotdog_Button3 = m_Hotdog.FindAction("Button3", throwIfNotFound: true);
        m_Hotdog_Button4 = m_Hotdog.FindAction("Button4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Hotdog
    private readonly InputActionMap m_Hotdog;
    private IHotdogActions m_HotdogActionsCallbackInterface;
    private readonly InputAction m_Hotdog_Button1;
    private readonly InputAction m_Hotdog_Button2;
    private readonly InputAction m_Hotdog_Button3;
    private readonly InputAction m_Hotdog_Button4;
    public struct HotdogActions
    {
        private @Minigames m_Wrapper;
        public HotdogActions(@Minigames wrapper) { m_Wrapper = wrapper; }
        public InputAction @Button1 => m_Wrapper.m_Hotdog_Button1;
        public InputAction @Button2 => m_Wrapper.m_Hotdog_Button2;
        public InputAction @Button3 => m_Wrapper.m_Hotdog_Button3;
        public InputAction @Button4 => m_Wrapper.m_Hotdog_Button4;
        public InputActionMap Get() { return m_Wrapper.m_Hotdog; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HotdogActions set) { return set.Get(); }
        public void SetCallbacks(IHotdogActions instance)
        {
            if (m_Wrapper.m_HotdogActionsCallbackInterface != null)
            {
                @Button1.started -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton1;
                @Button1.performed -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton1;
                @Button1.canceled -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton1;
                @Button2.started -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton2;
                @Button2.performed -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton2;
                @Button2.canceled -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton2;
                @Button3.started -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton3;
                @Button3.performed -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton3;
                @Button3.canceled -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton3;
                @Button4.started -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton4;
                @Button4.performed -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton4;
                @Button4.canceled -= m_Wrapper.m_HotdogActionsCallbackInterface.OnButton4;
            }
            m_Wrapper.m_HotdogActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Button1.started += instance.OnButton1;
                @Button1.performed += instance.OnButton1;
                @Button1.canceled += instance.OnButton1;
                @Button2.started += instance.OnButton2;
                @Button2.performed += instance.OnButton2;
                @Button2.canceled += instance.OnButton2;
                @Button3.started += instance.OnButton3;
                @Button3.performed += instance.OnButton3;
                @Button3.canceled += instance.OnButton3;
                @Button4.started += instance.OnButton4;
                @Button4.performed += instance.OnButton4;
                @Button4.canceled += instance.OnButton4;
            }
        }
    }
    public HotdogActions @Hotdog => new HotdogActions(this);
    public interface IHotdogActions
    {
        void OnButton1(InputAction.CallbackContext context);
        void OnButton2(InputAction.CallbackContext context);
        void OnButton3(InputAction.CallbackContext context);
        void OnButton4(InputAction.CallbackContext context);
    }
}
